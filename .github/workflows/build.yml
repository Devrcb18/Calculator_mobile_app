name: Build Kivy APK

on:
  push:
    branches: [ main ]

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y zip unzip openjdk-17-jdk libncurses5

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install cython==0.29.36 buildozer

    - name: Setup Android SDK
      run: |
        # Create Android SDK directory
        mkdir -p ~/android-sdk

        # Download and extract command line tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d ~/android-sdk/cmdline-tools
        mv ~/android-sdk/cmdline-tools/cmdline-tools ~/android-sdk/cmdline-tools/latest

        # Set environment variables
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/34.0.0:$PATH" >> $GITHUB_ENV

        # Accept licenses (retry up to 3 times)
        for i in {1..3}; do
          yes | ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses && break
          sleep 5
        done

        # Install required components
        ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --install \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;34.0.0" \
          "ndk;25.2.9519653" \
          "cmake;3.22.1"

        # Verify installation
        echo "Build tools contents:"
        ls -la ~/android-sdk/build-tools/34.0.0/
        echo "AIDL version:"
        ~/android-sdk/build-tools/34.0.0/aidl --version || echo "AIDL check failed"

    - name: Configure Buildozer environment
      run: |
        # Create expected directory structure
        mkdir -p ~/.buildozer/android/platform
        ln -sfn ~/android-sdk ~/.buildozer/android/platform/android-sdk

        # Verify paths
        echo "Buildozer SDK path:"
        ls -la ~/.buildozer/android/platform/
        echo "Environment:"
        env | sort

    - name: Build APK
      run: |
        # Create debug log file
        echo "Starting build..." > build.log

        # Verify tools
        echo -e "\n\n=== Tool versions ===" >> build.log
        which python >> build.log
        python --version >> build.log
        which buildozer >> build.log
        buildozer --version >> build.log
        which aidl >> build.log
        aidl --version >> build.log 2>&1 || echo "AIDL check failed" >> build.log

        # Run buildozer with full debug output
        echo -e "\n\n=== Build output ===" >> build.log
        buildozer -v android debug >> build.log 2>&1 || (echo "Build failed" >> build.log && false)

        # Show last 100 lines of log if successful
        tail -n 100 build.log

    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: kivy-apk
        path: bin/*.apk

    - name: Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: build.log
