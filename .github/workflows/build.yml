name: Build Kivy APK
on:
  push:
    branches: [main]

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure all files are checked out

      - name: Verify repository contents
        run: |
          echo "Repository contents:"
          ls -la
          echo "Checking for requirements files:"
          ls -la requirements.txt pyproject.toml setup.py || echo "No requirements files found"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            libncurses6 \
            zlib1g-dev \
            libffi-dev \
            libssl-dev

      - name: Create default requirements if missing
        run: |
          if [ ! -f requirements.txt ]; then
            echo "Creating default requirements.txt"
            echo "kivy>=2.3.0" > requirements.txt
            echo "buildozer>=1.5.0" >> requirements.txt
          fi
          cat requirements.txt

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install cython==0.29.36 buildozer

      - name: Initialize Buildozer if needed
        run: |
          if [ ! -f buildozer.spec ]; then
            echo "Initializing Buildozer"
            buildozer init
            sed -i "s/^requirements = .*/requirements = $(grep -v '^#' requirements.txt | tr '\n' ',' | sed 's/,$//')/" buildozer.spec
          fi
          cat buildozer.spec

      - name: Setup Android environment
        run: |
          mkdir -p ~/android-sdk
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d ~/android-sdk/cmdline-tools
          mv ~/android-sdk/cmdline-tools/cmdline-tools ~/android-sdk/cmdline-tools/latest

          echo "ANDROID_SDK_ROOT=~/android-sdk" >> $GITHUB_ENV
          echo "PATH=~/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

          yes | ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true
          ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;34.0.0" \
            "ndk;25.2.9519653"

          echo "PATH=~/android-sdk/platform-tools:~/android-sdk/build-tools/34.0.0:$PATH" >> $GITHUB_ENV

      - name: Build APK
        run: |
          echo "=== Build Environment ==="
          echo "Python: $(which python)"
          echo "Buildozer: $(which buildozer)"
          echo "Android SDK: $ANDROID_SDK_ROOT"
          echo "=== Starting Build ==="
          buildozer -v android debug 2>&1 | tee build.log
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "=== BUILD FAILED ==="
            tail -n 50 build.log
            exit 1
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kivy-apk
          path: bin/*.apk

      - name: Upload build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
