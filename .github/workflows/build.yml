name: Build Kivy APK

on:
  push:
    branches: [main]

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            libncurses6 \
            zlib1g-dev \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            autoconf \
            automake \
            libtool \
            pkg-config \
            cmake \
            make \
            patch

      - name: Install Buildozer and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --user cython==0.29.36 buildozer==1.5.0 python-for-android==2024.1.21 kivy==2.2.1 kivymd

      - name: Clean up conflicting Android installations
        run: |
          sudo rm -rf /usr/local/lib/android/sdk || true
          sudo rm -rf $HOME/.android || true

      - name: Setup Android SDK and NDK
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest

          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV

          mkdir -p $HOME/android-sdk/licenses
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $HOME/android-sdk/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $HOME/android-sdk/licenses/android-sdk-preview-license

          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;34.0.0" \
            "ndk;25.2.9519653"

      - name: Configure Buildozer spec
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

          sed -i "s|^#*android.accept_sdk_license = .*|android.accept_sdk_license = True|" buildozer.spec
          sed -i "s|^#*android.sdk_path = .*|android.sdk_path = $HOME/android-sdk|" buildozer.spec
          sed -i "s|^#*android.ndk_path = .*|android.ndk_path = $HOME/android-sdk/ndk/25.2.9519653|" buildozer.spec
          sed -i "s|^#*android.ndk_version = .*|android.ndk_version = 25.2.9519653|" buildozer.spec
          sed -i "s|^#*requirements = .*|requirements = python3,kivy==2.2.1,kivymd|" buildozer.spec
          sed -i "s|^#*android.api = .*|android.api = 33|" buildozer.spec
          sed -i "s|^#*android.minapi = .*|android.minapi = 21|" buildozer.spec
          sed -i "s|^#*android.arch = .*|android.arch = arm64-v8a|" buildozer.spec
          sed -i "s|^#*log_level = .*|log_level = 2|" buildozer.spec

      - name: Build APK
        run: |
          export GRADLE_OPTS="-Xmx4096m -Dorg.gradle.daemon=false"
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653

          buildozer android clean || true
          rm -rf .buildozer/android/platform/build-* || true

          if ! buildozer -v android debug > build.log 2>&1; then
            echo "=== First build failed, trying armeabi-v7a ==="
            sed -i "s|android.arch = arm64-v8a|android.arch = armeabi-v7a|" buildozer.spec
            buildozer android clean || true
            rm -rf .buildozer/android/platform/build-* || true

            if ! buildozer -v android debug > build2.log 2>&1; then
              echo "=== Build failed ==="
              echo "First build log tail:"
              tail -n 50 build.log
              echo "Second build log tail:"
              tail -n 50 build2.log
              exit 1
            fi
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kivy-app
          path: bin/*.apk
          retention-days: 5

      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            build.log
            build2.log
          retention-days: 5
