name: Build Kivy APK
on:
  push:
    branches: [main]

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            libncurses6 \
            zlib1g-dev \
            libffi-dev \
            libssl-dev \
            libsqlite3-dev \
            autoconf \
            automake \
            libtool \
            pkg-config \
            cmake

      - name: Install Buildozer and dependencies
        run: |
          python -m pip install --upgrade pip virtualenv
          pip install --user cython==0.29.36 buildozer==1.5.0

      - name: Setup Android SDK
        run: |
          # Create Android SDK directory
          mkdir -p ~/android-sdk
          
          # Download command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d ~/android-sdk/cmdline-tools
          mv ~/android-sdk/cmdline-tools/cmdline-tools ~/android-sdk/cmdline-tools/latest

          # Create legacy tools directory that Buildozer expects
          mkdir -p ~/android-sdk/tools/bin
          ln -s ~/android-sdk/cmdline-tools/latest/bin/sdkmanager ~/android-sdk/tools/bin/sdkmanager

          # Set environment variables
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$HOME/android-sdk/ndk/25.2.9519653" >> $GITHUB_ENV

          # Accept licenses
          mkdir -p ~/android-sdk/licenses
          echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/android-sdk/licenses/android-sdk-license
          echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > ~/android-sdk/licenses/android-sdk-preview-license

          # Install required components
          yes | ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;34.0.0" \
            "ndk;25.2.9519653"

          # Verify installation
          ~/android-sdk/platform-tools/adb version
          ~/android-sdk/build-tools/34.0.0/aapt version

      - name: Configure Buildozer
        run: |
          # Create symlink structure expected by Buildozer
          mkdir -p ~/.buildozer/android/platform
          ln -sfn ~/android-sdk ~/.buildozer/android/platform/android-sdk
          
          # Initialize or update buildozer.spec
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          
          # Update critical settings using alternative sed delimiter
          sed -i "s|^#android.accept_sdk_license = .*|android.accept_sdk_license = True|" buildozer.spec
          sed -i "s|^#android.ndk_path = .*|android.ndk_path = $HOME/android-sdk/ndk/25.2.9519653|" buildozer.spec
          sed -i "s|^#android.sdk_path = .*|android.sdk_path = $HOME/android-sdk|" buildozer.spec
          sed -i "s|^#android.sdk_manager_path = .*|android.sdk_manager_path = $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager|" buildozer.spec
          sed -i "s|^#p4a.branch = .*|p4a.branch = develop|" buildozer.spec
          sed -i "s|^#requirements = .*|requirements = python3,kivy,pillow,hostpython3|" buildozer.spec
          sed -i "s|^#android.api = .*|android.api = 33|" buildozer.spec
          sed -i "s|^#android.minapi = .*|android.minapi = 21|" buildozer.spec
          sed -i "s|^#android.ndk_version = .*|android.ndk_version = 25.2.9519653|" buildozer.spec

      - name: Build APK
        run: |
          # Clean previous builds
          buildozer android clean || true
          
          # Build with verbose output
          buildozer -v android debug 2>&1 | tee build.log
          
          # Check build result
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "=== BUILD FAILED ==="
            echo "Last 100 lines of build log:"
            tail -n 100 build.log
            echo "=== BUILD FAILURE ANALYSIS ==="
            grep -i "error\|fail\|exception\|warning" build.log | sort | uniq -c | sort -nr
            exit 1
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kivy-app
          path: bin/*.apk
          retention-days: 5

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
          retention-days: 5
