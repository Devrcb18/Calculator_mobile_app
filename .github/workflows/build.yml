name: Build Kivy APK
on:
  push:
    branches: [main]

jobs:
  build-android:
    name: Build for Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            git \
            zip \
            unzip \
            openjdk-17-jdk \
            libncurses6 \
            zlib1g-dev \
            libffi-dev \
            libssl-dev

      - name: Install Buildozer
        run: |
          python -m pip install --upgrade pip
          pip install cython==0.29.36 buildozer

      - name: Setup Android SDK with guaranteed license acceptance
        run: |
          # Create Android SDK directory
          mkdir -p ~/android-sdk
          
          # Download command line tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d ~/android-sdk/cmdline-tools
          mv ~/android-sdk/cmdline-tools/cmdline-tools ~/android-sdk/cmdline-tools/latest

          # Set environment variables
          echo "ANDROID_SDK_ROOT=~/android-sdk" >> $GITHUB_ENV
          echo "PATH=~/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

          # Pre-accept all licenses
          mkdir -p ~/android-sdk/licenses
          echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > ~/android-sdk/licenses/android-sdk-license
          echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > ~/android-sdk/licenses/android-sdk-preview-license
          echo -e "\n601085b94cd77f0b54ff86406957099ebe79c4d6" > ~/android-sdk/licenses/android-go-sdk-license
          echo -e "\n33b6a2b64607f11b759f320ef9dff4ae5c47d97a" > ~/android-sdk/licenses/google-gdk-license

          # Install required components (using older but stable versions)
          ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;30.0.3" \
            "ndk;25.2.9519653"

          # Verify installation
          ls -la ~/android-sdk/build-tools/30.0.3/
          ~/android-sdk/build-tools/30.0.3/aidl --version || echo "AIDL verification failed"

      - name: Configure Buildozer environment
        run: |
          # Create expected directory structure
          mkdir -p ~/.buildozer/android/platform
          ln -sfn ~/android-sdk ~/.buildozer/android/platform/android-sdk
          
          # Initialize Buildozer if needed
          if [ ! -f buildozer.spec ]; then
            buildozer init
            sed -i "s/^#requirements = .*/requirements = python3,kivy/" buildozer.spec
            sed -i "s/^#android.ndk_path = .*/android.ndk_path = \/home\/runner\/android-sdk\/ndk\/25.2.9519653/" buildozer.spec
            sed -i "s/^#android.sdk_path = .*/android.sdk_path = \/home\/runner\/android-sdk/" buildozer.spec
          fi

      - name: Build APK
        run: |
          # Clean previous builds
          buildozer android clean || true
          
          # Build with verbose output
          buildozer -v android debug 2>&1 | tee build.log
          
          # Check build result
          if [ ${PIPESTATUS[0]} -ne 0 ]; then
            echo "=== BUILD FAILED ==="
            tail -n 100 build.log
            exit 1
          fi

      - name: Upload APK artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: kivy-app
          path: bin/*.apk

      - name: Upload build log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build.log
